容器技术，又称为容器虚拟化，是一种操作系统级虚拟化，属于轻量级的虚拟化技术。
一般来说，容器技术主要包括Namespace和Cgroup这两个内核特性。
Namespace又称为命名空间
它主要做访问隔离。其原理是针对一类资源进行抽象，并将其封装在一起提供给一个容器使用，对于这类资源，因为每个容器都有自己的抽象，而他们彼此之间是不可见的，所以就可以做到访问隔离。
Cgroup又称为控制组
它主要是做资源控制。其原理是将一组进程放在一个控制组里，通过给这个控制组分配指定的可用资源，达到控制这一组进程可用资源的目的。
Docker是基于Go语言实现的云开源项目。
Docker是一个用于开发，交付和运行应用程序的开放平台。Docker使开发者能够将应用程序与基础架构分开，从而可以快速交付软件。
借助Docker，我们可以以与管理应用程序相同的方式来管理基础架构。
通过利用Docker的快速交付，测试和部署代码的方法，我们可以大大减少编写代码和在生产环境中运行代码之间的延迟。
Docker提供了在松散隔离的环境（称为容器）中打包和运行应用程序的功能。
Docker 是 PaaS 提供商 dotCloud 开源的高级容器引擎，源代码托管在 Github上, 基于go语言，并遵从Apache2.0协议开源。
dotCloud公司后来也改名为Docker Inc，专注于Docker相关技术和产品的开发。
容器是轻量级的，因为它们不需要管理程序的额外负担，而是直接在主机的内核中运行。
Docker Engine是具有以下主要组件的客户端-服务器应用程序：
 1.服务器是一种长期运行的程序，称为守护程序进程（ dockerd命令）。
 2.REST API，它指定程序可以用来与守护程序进行通信并指示其操作的接口。
 3.命令行界面（CLI）客户端（docker命令）。
